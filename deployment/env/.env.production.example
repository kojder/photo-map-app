# Photo Map - Production Environment Configuration
# Last Updated: 2025-10-27
# Instructions: Skopiuj ten plik do .env.production i uzupełnij wartości

# ==============================================================================
# PostgreSQL Configuration (Shared Service - Mikrus)
# ==============================================================================
# Credentials z panelu Mikrus: https://mikr.us/panel/?a=postgres
# Zobacz: deployment/env/mikrus-credentials.md - instrukcja pobrania credentials

# Full JDBC URL (host: psql01.mikr.us, port: 5432)
DATABASE_URL=jdbc:postgresql://psql01.mikr.us:5432/db_XXXXX

# Database username (z panelu Mikrus)
DATABASE_USERNAME=userXXXXX

# Database password (z panelu Mikrus)
DATABASE_PASSWORD=CHANGE_ME_FROM_MIKRUS_PANEL

# Database name (z panelu Mikrus - to samo co w DATABASE_URL)
POSTGRES_DB=db_XXXXX

# PostgreSQL port (default: 5432)
POSTGRES_PORT=5432

# ==============================================================================
# JWT Configuration
# ==============================================================================
# Generate secure JWT secret:
# openssl rand -base64 32
# Example output: xK8vN2pQr5tYw9zA1bCdE3fGhI4jKlM6nOpRqS7uVxY=

# JWT secret key (32+ characters recommended, base64 encoded)
JWT_SECRET=CHANGE_ME_GENERATE_WITH_OPENSSL_RAND_BASE64_32

# JWT expiration time in milliseconds (default: 86400000 = 24 hours)
JWT_EXPIRATION=86400000

# ==============================================================================
# Spring Boot Configuration
# ==============================================================================
# Active Spring profile (production for deployment)
SPRING_PROFILES_ACTIVE=production

# Server port (default: 8080, localhost only - nginx reverse proxy)
SERVER_PORT=8080

# ==============================================================================
# Upload Directory Configuration
# ==============================================================================
# All paths are absolute paths on Mikrus VPS
# Base directory: /opt/photo-map/uploads/

# Input directory - drop zone for new photos (web upload + batch SCP)
UPLOAD_INPUT_DIR=/opt/photo-map/uploads/input

# Original directory - processed originals (full resolution)
UPLOAD_ORIGINAL_DIR=/opt/photo-map/uploads/original

# Medium directory - 300px thumbnails (used in gallery + map)
UPLOAD_MEDIUM_DIR=/opt/photo-map/uploads/medium

# Failed directory - processing errors + logs
UPLOAD_FAILED_DIR=/opt/photo-map/uploads/failed

# ==============================================================================
# Admin Configuration
# ==============================================================================
# Admin email - used for initial admin account creation
# Uwaga: Po pierwszym uruchomieniu admin jest tworzony automatycznie
# Hasło należy zmienić przez API /api/admin/profile (TODO: implement)

ADMIN_EMAIL=admin@example.com

# ==============================================================================
# Application Settings (Opcjonalne)
# ==============================================================================
# Admin contact email - wyświetlany użytkownikom przy błędach uprawnień
# Default: ADMIN_EMAIL (jeśli puste)
# ADMIN_CONTACT_EMAIL=contact@example.com

# ==============================================================================
# Spring Boot Actuator (Opcjonalne)
# ==============================================================================
# Actuator endpoints - health, info, metrics
# Dostępne przez nginx (IP restricted) lub bezpośrednio na VPS

# Enable all actuator endpoints (default: false)
# MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics

# ==============================================================================
# Logging Configuration (Opcjonalne)
# ==============================================================================
# Logging level (default: INFO)
# Options: TRACE, DEBUG, INFO, WARN, ERROR
# LOGGING_LEVEL_ROOT=INFO
# LOGGING_LEVEL_COM_PHOTOMAP=DEBUG

# Log file (default: none - systemd journalctl used)
# LOGGING_FILE_NAME=/opt/photo-map/logs/application.log

# ==============================================================================
# JPA/Hibernate Configuration (Opcjonalne)
# ==============================================================================
# Show SQL queries in logs (default: false, use only for debugging)
# SPRING_JPA_SHOW_SQL=false

# Hibernate DDL auto (default: validate - Flyway handles migrations)
# Options: validate, update, create, create-drop
# SPRING_JPA_HIBERNATE_DDL_AUTO=validate

# ==============================================================================
# Deployment Notes
# ==============================================================================
# 1. Skopiuj ten plik: cp .env.production.example .env.production
# 2. Uzupełnij wartości (PostgreSQL credentials, JWT secret, admin email)
# 3. Transfer na VPS: scp -P 10XXX .env.production root@srvXX:/opt/photo-map/.env
# 4. Set permissions: chmod 600 /opt/photo-map/.env && chown photo-map:photo-map
# 5. Restart backend: systemctl restart photo-map-backend
# 6. Verify: curl http://localhost:8080/actuator/health

# ==============================================================================
# Security Warnings
# ==============================================================================
# ⚠️ NIGDY nie commituj .env.production do Git!
# ⚠️ .env.production zawiera secrets (PostgreSQL password, JWT secret)
# ⚠️ .gitignore MUSI zawierać: .env.production, .env*.local
# ⚠️ Uprawnienia .env na VPS: 600 (tylko photo-map user może czytać)
# ⚠️ JWT_SECRET: minimum 32 znaki, losowy, base64 encoded

# ==============================================================================
# Troubleshooting
# ==============================================================================
# Problem: Backend nie startuje - "Could not connect to PostgreSQL"
# Solution: Sprawdź credentials w panelu Mikrus (https://mikr.us/panel/?a=postgres)
#           Test connection: psql -h psql01.mikr.us -U userXXXXX -d db_XXXXX

# Problem: Backend nie startuje - "JWT secret cannot be null"
# Solution: Wygeneruj JWT secret: openssl rand -base64 32
#           Skopiuj wartość do JWT_SECRET

# Problem: Admin nie może się zalogować po pierwszym uruchomieniu
# Solution: Default password to "admin" - ZMIEŃ NATYCHMIAST!
#           TODO: Implement /api/admin/profile endpoint

# Problem: Upload fails - "Permission denied"
# Solution: Sprawdź uprawnienia katalogów:
#           chown -R photo-map:photo-map /opt/photo-map/uploads/
#           chmod -R 755 /opt/photo-map/uploads/

# ==============================================================================
# Example .env.production (FILLED)
# ==============================================================================
# DATABASE_URL=jdbc:postgresql://psql01.mikr.us:5432/db_12345
# DATABASE_USERNAME=user12345
# DATABASE_PASSWORD=super_secret_from_mikrus_panel_123
# POSTGRES_DB=db_12345
# POSTGRES_PORT=5432
#
# JWT_SECRET=xK8vN2pQr5tYw9zA1bCdE3fGhI4jKlM6nOpRqS7uVxY=
# JWT_EXPIRATION=86400000
#
# SPRING_PROFILES_ACTIVE=production
# SERVER_PORT=8080
#
# UPLOAD_INPUT_DIR=/opt/photo-map/uploads/input
# UPLOAD_ORIGINAL_DIR=/opt/photo-map/uploads/original
# UPLOAD_MEDIUM_DIR=/opt/photo-map/uploads/medium
# UPLOAD_FAILED_DIR=/opt/photo-map/uploads/failed
#
# ADMIN_EMAIL=admin@mycompany.com

# ==============================================================================
# End of .env.production.example
# ==============================================================================
